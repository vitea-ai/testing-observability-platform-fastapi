version: '3.8'

services:
  # PostgreSQL Database
  eval-postgres-fastapi:
    image: postgres:15-alpine
    container_name: eval-postgres-fastapi
    environment:
      POSTGRES_DB: ${DB_NAME:-evaluation_db}
      POSTGRES_USER: ${DB_USER:-dbadmin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres123}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-dbadmin} -d ${DB_NAME:-evaluation_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vitea-shared-network
    labels:
      - "logs.collect=true"
      - "logs.service=testing-observability-postgres"

  # FastAPI Application
  api:
    image: testing-observability-platform-fastapi:latest
    container_name: eval-api-fastapi
    environment:
      APP_ENV: ${APP_ENV:-integration}
      APP_PORT: 8000
      APP_DATABASE_URL: postgresql://${DB_USER:-dbadmin}:${DB_PASSWORD:-postgres123}@eval-postgres-fastapi:5432/${DB_NAME:-evaluation_db}
      DATABASE_URL: postgresql+asyncpg://${DB_USER:-dbadmin}:${DB_PASSWORD:-postgres123}@eval-postgres-fastapi:5432/${DB_NAME:-evaluation_db}
      APP_EVALUATOR_SERVICE_URL: http://evaluator-service:8001
      APP_DEPLOYMENT_TIER: integration
      APP_ENABLE_AUTHENTICATION: ${APP_ENABLE_AUTHENTICATION:-false}
      APP_ENABLE_AUDIT_LOGGING: ${APP_ENABLE_AUDIT_LOGGING:-true}
      APP_ENABLE_HEALTHCARE_MODE: ${APP_ENABLE_HEALTHCARE_MODE:-true}
      # Redis and Celery configuration
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      # OpenTelemetry configuration for observability
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: ${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:-http://host.docker.internal:10318/v1/traces}
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: ${OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:-http://host.docker.internal:10318/v1/logs}
      OTEL_SERVICE_NAME: testing-observability-platform
      ENABLE_METRICS: "true"
    ports:
      - "8000:8000"
    depends_on:
      eval-postgres-fastapi:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro
      - ./alembic:/app/alembic:ro
    networks:
      - vitea-shared-network
    restart: unless-stopped
    command: /app/.venv/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    labels:
      - "logs.collect=true"
      - "logs.service=testing-observability-platform"

  # AI Evaluator Service (Python) - References separate vitea-evaluators repo
  evaluator-service:
    build:
      context: ../vitea-evaluators
      dockerfile: Dockerfile
    container_name: eval-evaluator-service-fastapi
    volumes:
      - ../vitea-evaluators/app:/app/app
    env_file:
      - ../vitea-evaluators/.env
    environment:
      - LOG_LEVEL=INFO
    ports:
      - "9002:8001"
    networks:
      - vitea-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "logs.collect=true"
      - "logs.service=vitea-evaluator-service"

  # Redis Cache (Now used for Celery in all tiers)
  redis:
    image: redis:7-alpine
    container_name: eval-redis-fastapi
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vitea-shared-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "logs.collect=true"
      - "logs.service=testing-observability-redis"
  
  # Celery Worker for Async Evaluation
  celery-worker:
    image: testing-observability-platform-fastapi:latest
    container_name: eval-celery-worker
    environment:
      APP_ENV: ${APP_ENV:-integration}
      APP_DATABASE_URL: postgresql://${DB_USER:-dbadmin}:${DB_PASSWORD:-postgres123}@eval-postgres-fastapi:5432/${DB_NAME:-evaluation_db}
      DATABASE_URL: postgresql://${DB_USER:-dbadmin}:${DB_PASSWORD:-postgres123}@eval-postgres-fastapi:5432/${DB_NAME:-evaluation_db}
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      APP_EVALUATOR_SERVICE_URL: http://evaluator-service:8001
    depends_on:
      eval-postgres-fastapi:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro
    networks:
      - vitea-shared-network
    restart: unless-stopped
    command: sh -c "cd /app && /app/.venv/bin/celery -A app.workers.celery_app worker --loglevel=info --concurrency=2"
    labels:
      - "logs.collect=true"
      - "logs.service=testing-observability-celery"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  vitea-shared-network:
    external: true